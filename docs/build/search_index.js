var documenterSearchIndex = {"docs":
[{"location":"#TightBinding.jl","page":"Home","title":"TightBinding.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Coverage Status)","category":"page"},{"location":"#TightBinding.jl-2","page":"Home","title":"TightBinding.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This can construct the tight-binding model and calculate energies in Julia 1.0. This software is released under the MIT License, see LICENSE.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This can","category":"page"},{"location":"","page":"Home","title":"Home","text":"construct the Hamiltonian as a functional of a momentum k.\nplot the band structure.\nshow the crystal structure.\nplot the band structure of the finite-width system with one surface or boundary.\n[09 Feb. 2019] make surface Hamiltonian from the momentum space Hamiltonian.\n[19 Nov. 2019] get DOS data and energy mesh\n[22 Jun. 2020] construct a supercell model\n[EXPERIMENTAL][22 Jun. 2020] write Wannier90 format.","category":"page"},{"location":"","page":"Home","title":"Home","text":"There is the sample jupyter notebook.","category":"page"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Push \"]\" to enter the package mode.","category":"page"},{"location":"","page":"Home","title":"Home","text":"add TightBinding","category":"page"},{"location":"#samples","page":"Home","title":"samples","text":"","category":"section"},{"location":"#Graphene","page":"Home","title":"Graphene","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here is a Graphene case","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TightBinding\n#Primitive vectors\na1 = [sqrt(3)/2,1/2]\na2= [0,1]\n#set lattice\nla = set_Lattice(2,[a1,a2])\n#add atoms\nadd_atoms!(la,[1/3,1/3])\nadd_atoms!(la,[2/3,2/3])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then we added two atoms (atom 1 and atom 2). We can see the possible hoppings.","category":"page"},{"location":"","page":"Home","title":"Home","text":"show_neighbors(la)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Output is","category":"page"},{"location":"","page":"Home","title":"Home","text":"Possible hoppings\n(1,1), x:-1//1, y:-1//1\n(1,2), x:-2//3, y:-2//3\n(2,2), x:-1//1, y:-1//1\n(1,1), x:-1//1, y:0//1\n(1,2), x:-2//3, y:1//3\n(2,2), x:-1//1, y:0//1\n(1,1), x:-1//1, y:1//1\n(1,2), x:-2//3, y:4//3\n(2,2), x:-1//1, y:1//1\n(1,1), x:0//1, y:-1//1\n(1,2), x:1//3, y:-2//3\n(2,2), x:0//1, y:-1//1\n(1,1), x:0//1, y:0//1\n(1,2), x:1//3, y:1//3\n(2,2), x:0//1, y:0//1\n(1,1), x:0//1, y:1//1\n(1,2), x:1//3, y:4//3\n(2,2), x:0//1, y:1//1\n(1,1), x:1//1, y:-1//1\n(1,2), x:4//3, y:-2//3\n(2,2), x:1//1, y:-1//1\n(1,1), x:1//1, y:0//1\n(1,2), x:4//3, y:1//3\n(2,2), x:1//1, y:0//1\n(1,1), x:1//1, y:1//1\n(2,2), x:1//1, y:1//1","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you want to construct the Graphene, you choose hoppings from atom 1 to atom 2:","category":"page"},{"location":"","page":"Home","title":"Home","text":"#construct hoppings\nt = 1.0\nadd_hoppings!(la,-t,1,2,[1/3,1/3])\nadd_hoppings!(la,-t,1,2,[-2/3,1/3])\nadd_hoppings!(la,-t,1,2,[1/3,-2/3])","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots\n#show the lattice structure\nplot_lattice_2d(la)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f37346633306563662d356137632d643337362d393235642d6561663563343634376362632e706e67)","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots\n# Density of states\nnk = 100 #numer ob meshes. nk^d meshes are used. d is a dimension.\nplot_DOS(la, nk)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f39343635643263312d643466332d333634372d363036652d3836626263313462313530622e706e67)","category":"page"},{"location":"","page":"Home","title":"Home","text":"[19 Nov. 2019]  We can get DOS data and energy mesh. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"nk = 100 #numer ob meshes. nk^d meshes are used. d is a dimension.\nhist = get_DOS(la, nk)\nprintln(hist.weights) #DOS data\nprintln(hist.edges[1]) #energy mesh\nusing Plots\nplot(hist.edges[1][2:end] .- hist.edges[1].step.hi/2,hist.weights)","category":"page"},{"location":"","page":"Home","title":"Home","text":"#show the band structure\nklines = set_Klines()\nkmin = [0,0]\nkmax = [2π/sqrt(3),0]\nadd_Kpoints!(klines,kmin,kmax,\"G\",\"K\")\n\nkmin = [2π/sqrt(3),0]\nkmax = [2π/sqrt(3),2π/3]\nadd_Kpoints!(klines,kmin,kmax,\"K\",\"M\")\n\nkmin = [2π/sqrt(3),2π/3]\nkmax = [0,0]\nadd_Kpoints!(klines,kmin,kmax,\"M\",\"G\")\ncalc_band_plot(klines,la)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f32616530653833392d633239642d333166332d336533332d3136343164376431636230382e706e67)","category":"page"},{"location":"#Graphene-nano-ribbon","page":"Home","title":"Graphene nano-ribbon","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Plots\n#We have already constructed atoms and hoppings.\n#We add the line to plot\nklines = set_Klines()\nkmin = [-π]\nkmax = [π]\nadd_Kpoints!(klines,kmin,kmax,\"-pi\",\"pi\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"#We consider the periodic boundary condition along the primitive vector\ndirection = 1\n#Periodic boundary condition\ncalc_band_plot_finite(klines,la,direction,periodic=true)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f66323033656365632d393835322d303931612d336332382d3662633463386138356666312e706e67)","category":"page"},{"location":"","page":"Home","title":"Home","text":"#We introduce the surface perpendicular to the premitive vector\ndirection = 1\n#Open boundary condition\ncalc_band_plot_finite(klines,la,direction,periodic=false)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f36313038363162632d316538302d343364632d303064322d3035643237663865383435652e706e67)","category":"page"},{"location":"#Fe-based-superconductor","page":"Home","title":"Fe-based superconductor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We construct two-band model for Fe-based superconductor [S. Rachu et al. Phys. Rev. B 77, 220503(R) (2008)].","category":"page"},{"location":"","page":"Home","title":"Home","text":"la = set_Lattice(2,[[1,0],[0,1]]) #Square lattice\nadd_atoms!(la,[0,0]) #dxz orbital\nadd_atoms!(la,[0,0]) #dyz orbital\n#hoppings\nt1 = -1.0\nt2 = 1.3\nt3 = -0.85\nt4 = t3\nμ = 1.45\n\n#dxz\nadd_hoppings!(la,-t1,1,1,[1,0])\nadd_hoppings!(la,-t2,1,1,[0,1])\nadd_hoppings!(la,-t3,1,1,[1,1])\nadd_hoppings!(la,-t3,1,1,[1,-1])\n\n#dyz\nadd_hoppings!(la,-t2,2,2,[1,0])\nadd_hoppings!(la,-t1,2,2,[0,1])\nadd_hoppings!(la,-t3,2,2,[1,1])\nadd_hoppings!(la,-t3,2,2,[1,-1])\n\n#between dxz and dyz\nadd_hoppings!(la,-t4,1,2,[1,1])\nadd_hoppings!(la,-t4,1,2,[-1,-1])\nadd_hoppings!(la,t4,1,2,[1,-1])\nadd_hoppings!(la,t4,1,2,[-1,1])\n\n#Chemical potentials\nset_μ!(la,μ) #set the chemical potential","category":"page"},{"location":"","page":"Home","title":"Home","text":"To see the band structure, we use","category":"page"},{"location":"","page":"Home","title":"Home","text":"klines = set_Klines()\nkmin = [0,0]\nkmax = [π,0]\nadd_Kpoints!(klines,kmin,kmax,\"(0,0)\",\"(pi,0)\")\n\nkmin = [π,0]\nkmax = [π,π]\nadd_Kpoints!(klines,kmin,kmax,\"(pi,0)\",\"(pi,pi)\")\n\nkmin = [π,π]\nkmax = [0,0]\nadd_Kpoints!(klines,kmin,kmax,\"(pi,pi)\",\"(0,0)\")\n\nusing Plots\npls = calc_band_plot(klines,la)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, we have the band structure:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: fe)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can obtain the Hamiltonian:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ham = hamiltonian_k(la) #we can obtain the function \"ham([kx,ky])\".\nkx = 0.1\nky = 0.2\nhamk = ham([kx,ky]) #ham is a functional of k=[kx,ky].\nprintln(hamk)","category":"page"},{"location":"#Fe-based-superconductor:-5-orbital-model","page":"Home","title":"Fe-based superconductor: 5 orbital model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Finally, we show the 5-orbital model proposed by K. Kuroki et al.[K. Kuroki et al., Phys. Rev. Lett. 101, 087004  (2008)]. The sample code is","category":"page"},{"location":"","page":"Home","title":"Home","text":"la = set_Lattice(2,[[1,0],[0,1]])\nadd_atoms!(la,[0,0])\nadd_atoms!(la,[0,0])\nadd_atoms!(la,[0,0])\nadd_atoms!(la,[0,0])\nadd_atoms!(la,[0,0])\n\ntmat = [\n-0.7    0 -0.4  0.2 -0.1\n-0.8    0    0    0    0\n 0.8 -1.5    0    0 -0.3\n   0  1.7    0    0 -0.1\n-3.0    0    0 -0.2    0\n-2.1  1.5    0    0    0\n 1.3    0  0.2 -0.2    0\n 1.7    0    0  0.2    0\n-2.5  1.4    0    0    0\n-2.1  3.3    0 -0.3  0.7\n 1.7  0.2    0  0.2    0\n 2.5    0    0  0.3    0\n 1.6  1.2 -0.3 -0.3 -0.3\n   0    0    0 -0.1    0\n 3.1 -0.7 -0.2    0    0\n]\ntmat = 0.1.*tmat\nimap = zeros(Int64,5,5)\ncount = 0\nfor μ=1:5\n    for ν=μ:5\n        count += 1\n        imap[μ,ν] = count\n    end\nend\nIs = [1,-1,-1,1,1,1,1,-1,-1,1,-1,-1,1,1,1]\nσds = [1,-1,1,1,-1,1,-1,-1,1,1,1,-1,1,-1,1]\ntmat_σy = tmat[:,:]\ntmat_σy[imap[1,2],:] = -tmat[imap[1,3],:]\ntmat_σy[imap[1,3],:] = -tmat[imap[1,2],:]\ntmat_σy[imap[1,4],:] = -tmat[imap[1,4],:]\ntmat_σy[imap[2,2],:] = tmat[imap[3,3],:]\ntmat_σy[imap[2,4],:] = tmat[imap[3,4],:]\ntmat_σy[imap[2,5],:] = -tmat[imap[3,5],:]\ntmat_σy[imap[3,3],:] = tmat[imap[2,2],:]\ntmat_σy[imap[3,4],:] = tmat[imap[2,4],:]\ntmat_σy[imap[3,5],:] = -tmat[imap[2,5],:]\ntmat_σy[imap[4,5],:] = -tmat[imap[4,5],:]\n\nhoppingmatrix = zeros(Float64,5,5,5,5)\nhops = [-2,-1,0,1,2]\nhopelements = [[1,0],[1,1],[2,0],[2,1],[2,2]]\n\nfor μ = 1:5\n    for ν=μ:5\n        for ii=1:5\n            ihop = hopelements[ii][1]\n            jhop = hopelements[ii][2]\n            #[a,b],[a,-b],[-a,-b],[-a,b],[b,a],[b,-a],[-b,a],[-b,-a]\n\n            #[a,b]\n            i = ihop +3\n            j = jhop +3\n            hoppingmatrix[μ,ν,i,j]=tmat[imap[μ,ν],ii]\n            #[a,-b] = σy*[a,b] [1,1] -> [1,-1]\n            if jhop != 0\n                i = ihop +3\n                j = -jhop +3\n                hoppingmatrix[μ,ν,i,j]=tmat_σy[imap[μ,ν],ii]\n            end\n\n            if μ != ν\n                #[-a,-b] = I*[a,b] [1,1] -> [-1,-1],[1,0]->[-1,0]\n                i = -ihop +3\n                j = -jhop +3\n                hoppingmatrix[μ,ν,i,j]=Is[imap[μ,ν]]*tmat[imap[μ,ν],ii]\n                #[-a,b] = I*[a,-b] = I*σy*[a,b]  #[2,0]->[-2,0]\n                if jhop != 0\n                    i = -ihop +3\n                    j = jhop +3\n                    hoppingmatrix[μ,ν,i,j]=Is[imap[μ,ν]]*tmat_σy[imap[μ,ν],ii]\n                end\n            end\n            #[b,a],[b,-a],[-b,a],[-b,-a]\n            if jhop != ihop\n                #[b,a] = σd*[a,b]\n                i = jhop +3\n                j = ihop +3\n                hoppingmatrix[μ,ν,i,j]=σds[imap[μ,ν]]*tmat[imap[μ,ν],ii]\n                #[-b,a] = σd*σy*[a,b]\n                if jhop != 0\n                    i = -jhop +3\n                    j = ihop +3\n                    hoppingmatrix[μ,ν,i,j]=σds[imap[μ,ν]]*tmat_σy[imap[μ,ν],ii]\n                end\n\n                if μ != ν\n                    #[-b,-a] = σd*[-a,-b] = σd*I*[a,b]\n                    i = -jhop +3\n                    j = -ihop +3\n                    hoppingmatrix[μ,ν,i,j]=σds[imap[μ,ν]]*Is[imap[μ,ν]]*tmat[imap[μ,ν],ii]\n                    #[b,-a] = σd*[-a,b] = σd*I*[a,-b] = σd*I*σy*[a,b]  #[2,0]->[-2,0]\n                    if jhop != 0\n                        i = jhop +3\n                        j = -ihop +3\n                        hoppingmatrix[μ,ν,i,j]=σds[imap[μ,ν]]*Is[imap[μ,ν]]*tmat_σy[imap[μ,ν],ii]\n                    end\n                end\n            end\n        end\n\n\n    end\nend\n\nfor μ=1:5\n    for ν=μ:5\n        for i = 1:5\n            ih = hops[i]\n            for j = 1:5\n                jh = hops[j]\n                if hoppingmatrix[μ,ν,i,j] != 0.0                \n                    add_hoppings!(la,hoppingmatrix[μ,ν,i,j],μ,ν,[ih,jh])\n                end\n            end\n        end\n    end\nend\n\nonsite = [10.75,10.96,10.96,11.12,10.62]\nset_onsite!(la,onsite)\n\nset_μ!(la,10.96) #set the chemical potential","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, we plot the band structure","category":"page"},{"location":"","page":"Home","title":"Home","text":"nk = 100\nklines = set_Klines()\nkmin = [0,0]\nkmax = [π,0]\nadd_Kpoints!(klines,kmin,kmax,\"(0,0)\",\"(pi,0)\",nk=nk)\n\nkmin = [π,0]\nkmax = [π,π]\nadd_Kpoints!(klines,kmin,kmax,\"(pi,0)\",\"(pi,pi)\",nk=nk)\n\nkmin = [π,π]\nkmax = [0,0]\nadd_Kpoints!(klines,kmin,kmax,\"(pi,pi)\",\"(0,0)\",nk=nk)\n\nusing Plots\npls = calc_band_plot(klines,la)\nsavefig(\"Fe5band.png\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"We have the band structure:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: fe5band)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This figure is consistent with Fig.2 in the paper where the hopping table is used [T. Nomura, J. Phys. Soc. Jpn. 78, 034716 (2009)].","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Fermi surface is given by","category":"page"},{"location":"","page":"Home","title":"Home","text":"pls = plot_fermisurface_2D(la)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: fefermi)","category":"page"},{"location":"#[09-Feb.-2019]-Making-surface-Hamiltonian-from-the-momentum-space-Hamiltonian","page":"Home","title":"[09 Feb. 2019] Making surface Hamiltonian from the momentum space Hamiltonian","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If we have the Hamiltonian defined in momentum space, we can construct the surface Hamiltonian. For example, we consider a model of 2D topological insulator: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TightBinding\nAx = 1\nAy = 1\nm2x = 1\nm2y = m2x\nm0 = -2*m2x\nm(k) = m0 + 2m2x*(1-cos(k[1]))+2m2y*(1-cos(k[2]))\nHk(k) = Ax*sin(k[1]).*σx +  Ay*sin(k[2]).*σy + m(k).*σz\nnorb = 2 #The size of the matrix","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now, when you use TightBinding.jl, the Pauli matrices σx,σy,σz,σ0 are defined. Then, ","category":"page"},{"location":"","page":"Home","title":"Home","text":"hamiltonian = surfaceHamiltonian(Hk,norb,numhop=3,L=32,kpara=\"kx\",BC=\"OBC\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"makes the function hamiltonian(k). We can choose open boundary condition OBC or  periodic boundary condition PBC. numhop determines the number of the maximum hoppings. numhop-th nearest neighbor hopping can be included. L detemines the size of the real space lattice. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots\nusing LinearAlgebra\nnkx = 100\nkxs = range(-π,stop=π ,length=nkx)\nmat_e = zeros(Float64,nkx,32*2)\nfor i=1:nkx\n    kx = kxs[i]\n    mat_h = hamiltonian(kx)\n    #println(mat_h)\n    \n    e,v = eigen(Matrix(mat_h))\n    #println(e)\n    mat_e[i,:] = real.(e[:])\nend\nplot(kxs,mat_e,labels=\"\")\nsavefig(\"tes1.png\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can see the surface state. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: tes2)","category":"page"},{"location":"#[22-Jun.-2020]-constructing-supercell-model","page":"Home","title":"[22 Jun. 2020] constructing supercell model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We can construct supercell model.","category":"page"},{"location":"#x2-Graphene","page":"Home","title":"2x2 Graphene","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We make the graphene: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TightBinding\n#Primitive vectors\na1 = [sqrt(3)/2,1/2]\na2= [0,1]\n#set lattice\nla = set_Lattice(2,[a1,a2])\n#add atoms\nadd_atoms!(la,[1/3,1/3])\nadd_atoms!(la,[2/3,2/3])\n\n#construct hoppings\nt = 1.0\nadd_hoppings!(la,-t,1,2,[1/3,1/3])\nadd_hoppings!(la,-t,1,2,[-2/3,1/3])\nadd_hoppings!(la,-t,1,2,[1/3,-2/3])\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, use make_supercell command: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"la_2x2 = make_supercell(la,[2,2])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, you can have the supercell model: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots\n#show the lattice structure\nplot_lattice_2d(la_2x2)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 2x2graphne)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The density of states is same: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Density of states\nnk = 100 #numer ob meshes. nk^d meshes are used. d is a dimension.\nplot_DOS(la_2x2, nk)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 2x2dos)","category":"page"},{"location":"#[22-Jun.-2020]-writing-the-wannier90-format","page":"Home","title":"[22 Jun. 2020] writing the wannier90 format","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can write the wannier90 file format. Wannier90 is in here It might be useful to have the wannier90_hr format. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"    la2 = set_Lattice(2,[[1,0],[0,1]])\n    add_atoms!(la2,[0,0])\n\n    show_neighbors(la2)\n\n    t = 1.0\n    add_hoppings!(la2,-t,1,1,[1,0])\n    add_hoppings!(la2,-t,1,1,[0,1])\n    ham2 = hamiltonian_k(la2)\n\n    kmin = [-π,-π]\n    kmax = [0.0,0.0]\n    nk = 20\n    vec_k,energies = calc_band(kmin,kmax,nk,la2,ham2)\n    println(\"Energies on the line from (-π,π) to (0,0)\")\n    println(energies)\n\n    las = make_supercell(la2,[2,2])\n    ham2s = hamiltonian_k(las)\n\n    vec_ks,energiess = calc_band(kmin,kmax,nk,las,ham2s)\n    println(\"Energies on the line from (-π,π) to (0,0)\")\n    println(energiess)\n    \n    write_hr(la2,filename=\"2dsample_hr.dat\")\n    write_hr(las,filename=\"2dsample_sp_hr.dat\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"writehr function writes a Lattice type struct as wannier90hr.dat format","category":"page"},{"location":"#[27-Jun.-2020]-reading-the-wannier90-format","page":"Home","title":"[27 Jun. 2020] reading the wannier90 format","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can read the wannier90_hr format.  For example, we write the wannier90 format for 5-band Fe-based superconductor as shown above.  Then, we have la as Lattice type.  We build a supercell for example.","category":"page"},{"location":"","page":"Home","title":"Home","text":"las = make_supercell(la,[2,2])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, write las as the wannier90_hr format. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"write_hr(las,filename=\"pnictide_5band_2x2_hr.dat\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the wannier90 format, there is no information about lattice vectors and positions of atoms. We have to define these before reading the file.  So we make new Lattice type. In our example, the lattice vectors are [2,0] and [0,2].  So, we add ","category":"page"},{"location":"","page":"Home","title":"Home","text":"la_new = set_Lattice(2,[[2,0],[0,2]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"and there 20 atoms whose positions are ","category":"page"},{"location":"","page":"Home","title":"Home","text":"println(las.positions)","category":"page"},{"location":"","page":"Home","title":"Home","text":"[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]","category":"page"},{"location":"","page":"Home","title":"Home","text":"We add these information to la_new. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"atoms = [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.0, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.5, 0.0], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.0, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]\nfor i=1:20\n    add_atoms!(la_new,atoms[i])\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"And set the chemical potential","category":"page"},{"location":"","page":"Home","title":"Home","text":"set_μ!(la_new,10.96)","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you do not set the chemical potential, the chemical potential is zero. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, we read the wannir90 format file. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"la_new = read_wannier(la_new,\"pnictide_5band_2x2_hr.dat\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"After reading it, you can plot Fermi surface etc.","category":"page"},{"location":"","page":"Home","title":"Home","text":"plot_fermisurface_2D(la_new)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Fe_FS_new)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TightBinding]","category":"page"},{"location":"#TightBinding.plot_fermisurface_2D-Tuple{Any}","page":"Home","title":"TightBinding.plot_fermisurface_2D","text":"plot_fermisurface_2D(lattice::Lattice;Eshift = 0.0,nk = 20)\n\nShow the Fermi surface for 2D system. \nThis plots the contour with E=0.0+Eshift \nEshift: the energy shift from the chemical potential lattice.μ \nnk: the number of meshes in 2D momentum space. The total mesh is nk x nk.\n\n\n\n\n\n","category":"method"},{"location":"#TightBinding.set_Lattice-Tuple{Any,Any}","page":"Home","title":"TightBinding.set_Lattice","text":"set_Lattice(dim::Integer,vectors::Array{Array{Float64,1},1})\n\nInitialize lattice. We have to call this before making Hamiltonian. dim: Dimension of the system. vector:: Primitive vectors.\n\nExample:\n\n1D system\n\nla1 = set_Lattice(1,[[1.0]])\n\n2D system\n\na1 = [sqrt(3)/2,1/2]\na2 = [0,1]\nla2 = set_Lattice(2,[a1,a2])\n\n3D system\n\na1 = [1,0,0]\na2 = [0,1,0]\na3 = [0,0,1]\nla2 = set_Lattice(3,[a1,a2,a3])\n\n\n\n\n\n","category":"method"}]
}
